// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int       @id @default(autoincrement())
  name                 String    @db.VarChar(100)
  email                String    @unique @db.VarChar(50)
  phone                String?   @unique @db.VarChar(15)
  hashed_password      String
  hashed_refresh_token String?
  created_at           DateTime? @default(now()) @db.Timestamp(6)
  updated_at           DateTime? @default(now()) @updatedAt @db.Timestamp(6)

  orders Order[]

  posts Posts[]

  @@map("users")
}

model Posts {
  id         Int      @id @default(autoincrement())
  title      String   @db.VarChar(100)
  content    String?  @db.Text
  author_id  Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(6)

  author User @relation(fields: [author_id], references: [id])

  @@map("posts")
}

model Order {
  id     Int   @id @default(autoincrement())
  total  Int
  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  @@map("orders")
}

model Student {
  id              Int             @id @default(autoincrement())
  name            String
  student_courses StudentCourse[]
}

model Course {
  id              Int             @id @default(autoincrement())
  title           String
  student_courses StudentCourse[]
}

model StudentCourse {
  id        Int     @id @default(autoincrement())
  studentId Int
  courseId  Int
  student   Student @relation(fields: [studentId], references: [id])
  course    Course? @relation(fields: [courseId], references: [id])

  @@unique([studentId, courseId])
  @@map("student_courses")
}
